{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const useForecast = () => {\n  _s();\n  const [term, setTerm] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [city, setCity] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const getSearchOptions = value => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => setOptions(data));\n  };\n  const onInputChange = e => {\n    const value = e.target.value.trim();\n    setTerm(value);\n    if (value === '') return;\n    getSearchOptions(value);\n  };\n  const getForecast = city => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${city.lat}&lon=${city.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => setForecast(data));\n    const forecastData = {\n      ...data,\n      city,\n      list: data.list.slice()\n    };\n  };\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  const onOptionSelect = op => {\n    setCity(op);\n  };\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOptions([]);\n    }\n  }, [city]);\n  return {\n    term,\n    options,\n    forecast,\n    onInputChange,\n    onOptionSelect,\n    onSubmit\n  };\n};\n_s(useForecast, \"zMQ0LXMlUO/0/kDo0c+q09lqdaI=\");","map":{"version":3,"names":["useEffect","useState","useForecast","_s","term","setTerm","options","setOptions","city","setCity","forecast","setForecast","getSearchOptions","value","fetch","trim","process","env","REACT_APP_API_KEY","then","res","json","data","onInputChange","e","target","getForecast","lat","lon","forecastData","list","slice","onSubmit","onOptionSelect","op","name"],"sources":["/Users/maryia_liakhnovich/another-projects/reactProjects/weather-app/src/hooks/useForecast.ts"],"sourcesContent":["import {ChangeEvent, useEffect, useState} from \"react\";\nimport {OptionType} from \"../types\";\n\nexport const useForecast=()=>{\n    const [term, setTerm] = useState<string>(\"\")\n    const [options, setOptions] = useState<[]>([])\n    const [city, setCity] = useState<OptionType | null>(null)\n    const [forecast, setForecast] = useState<null>(null)\n\n\n    const getSearchOptions = (value: string) => {\n        fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${\n            process.env.REACT_APP_API_KEY\n        }`).then(res => res.json()).then(data => setOptions(data))\n    }\n\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value.trim()\n        setTerm(value)\n        if (value === '') return\n        getSearchOptions(value)\n    }\n\n    const getForecast = (city: OptionType) => {\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${city.lat}&lon=${city.lon}&units=metric&appid=${\n            process.env.REACT_APP_API_KEY\n        }`).then(res => res.json()).then(data => setForecast(data))\n\n\n        const forecastData = {...data, city, list: data.list.slice()}\n    }\n\n    const onSubmit = () => {\n        if (!city) return\n\n        getForecast(city)\n    }\n\n    const onOptionSelect = (op: OptionType) => {\n        setCity(op)\n\n\n    }\n\n    useEffect(() => {\n        if (city) {\n            setTerm(city.name)\n            setOptions([])\n        }\n    }, [city])\n\n    return{\n        term, options, forecast, onInputChange, onOptionSelect, onSubmit\n    }\n}"],"mappings":";AAAA,SAAqBA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAGtD,OAAO,MAAMC,WAAW,GAACA,CAAA,KAAI;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAK,EAAE,CAAC;EAC9C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAoB,IAAI,CAAC;EACzD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAO,IAAI,CAAC;EAGpD,MAAMW,gBAAgB,GAAIC,KAAa,IAAK;IACxCC,KAAK,CAAE,kDAAiDD,KAAK,CAACE,IAAI,CAAC,CAAE,kBACjEC,OAAO,CAACC,GAAG,CAACC,iBACf,EAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,IAAIf,UAAU,CAACe,IAAI,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,aAAa,GAAIC,CAAgC,IAAK;IACxD,MAAMX,KAAK,GAAGW,CAAC,CAACC,MAAM,CAACZ,KAAK,CAACE,IAAI,CAAC,CAAC;IACnCV,OAAO,CAACQ,KAAK,CAAC;IACd,IAAIA,KAAK,KAAK,EAAE,EAAE;IAClBD,gBAAgB,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMa,WAAW,GAAIlB,IAAgB,IAAK;IACtCM,KAAK,CAAE,wDAAuDN,IAAI,CAACmB,GAAI,QAAOnB,IAAI,CAACoB,GAAI,uBACnFZ,OAAO,CAACC,GAAG,CAACC,iBACf,EAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,IAAIX,WAAW,CAACW,IAAI,CAAC,CAAC;IAG3D,MAAMO,YAAY,GAAG;MAAC,GAAGP,IAAI;MAAEd,IAAI;MAAEsB,IAAI,EAAER,IAAI,CAACQ,IAAI,CAACC,KAAK,CAAC;IAAC,CAAC;EACjE,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAI,CAACxB,IAAI,EAAE;IAEXkB,WAAW,CAAClB,IAAI,CAAC;EACrB,CAAC;EAED,MAAMyB,cAAc,GAAIC,EAAc,IAAK;IACvCzB,OAAO,CAACyB,EAAE,CAAC;EAGf,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACZ,IAAIQ,IAAI,EAAE;MACNH,OAAO,CAACG,IAAI,CAAC2B,IAAI,CAAC;MAClB5B,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EAEV,OAAM;IACFJ,IAAI;IAAEE,OAAO;IAAEI,QAAQ;IAAEa,aAAa;IAAEU,cAAc;IAAED;EAC5D,CAAC;AACL,CAAC;AAAA7B,EAAA,CAnDYD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}